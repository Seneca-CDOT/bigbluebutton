<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:views="org.bigbluebutton.air.common.views.*"
				styleName="streamItem"
				dataChange="onDataChange(event)"
				height="100%">
	<s:states>
		<s:State name="normal" />
		<s:State name="selected" />
	</s:states>

	<fx:Script>
		<![CDATA[
			private function setFirstLetters(participantName:String):void {
				var names:Array = participantName.split(" ");
				var firstLettersText:String = names[0].charAt(0);
				if (names[1]) {
					firstLettersText += names[1].charAt(0);
				}
				participantIcon.firstLetters.text = firstLettersText.toUpperCase();
			}
			
			override public function set data(obj:Object):void {
				super.data = obj;
				if (obj) {
					title.text = obj.user.name;
					presenter.visible = obj.user.presenter;
					presenter.includeInLayout = obj.user.presenter;
					setFirstLetters(obj.user.name);
					if (obj.user.me) {
						title.text += " " + resourceManager.getString('resources', 'userDetail.you');
					}
				}
			}
			
			protected function onDataChange(event:Event):void {
				invalidateRendererState();
			}
		]]>
	</fx:Script>
	<s:Group width="100%"
			 height="{getStyle('itemHeight')}"
			 id="content">

		<s:layout>
			<s:HorizontalLayout verticalAlign="middle"
								horizontalAlign="center"
								paddingTop="{getStyle('paddingTop')}"
								paddingBottom="{getStyle('paddingBottom')}" />
		</s:layout>

		<views:ParticipantIcon width="10%"
							   id="participantIcon" />

		<s:VGroup width="100%"
				  height="100%"
				  paddingRight="15"
				  verticalAlign="middle">
			<s:Label id="title"
					 maxWidth="300"
					 maxDisplayedLines="1"
					 styleName="videoStreamName contentFontSize" />

			<s:Label id="presenter"
					 text="{resourceManager.getString('resources', 'participants.status.presenting')}"
					 styleName="videoStreamNamePresenter subContentFontSize" />
		</s:VGroup>


		<s:Image styleName.selected="icon selectedIcon"
				 styleName.normal="icon unselectedIcon" />
	</s:Group>

	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="{getStyle('lineColor')}"
								weight="{getStyle('lineWeight')}" />
		</s:stroke>
	</s:Line>

</s:ItemRenderer>
