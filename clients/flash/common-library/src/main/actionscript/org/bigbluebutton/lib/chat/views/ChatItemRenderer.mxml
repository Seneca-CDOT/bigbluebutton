<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:views="org.bigbluebutton.lib.common.views.*"
				width="100%">

	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import org.bigbluebutton.lib.chat.models.ChatMessage;
			import org.bigbluebutton.lib.user.utils.UserUtils;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				wrapperGroup.padding = getStyle("padding");
				titleGroup.gap = getStyle("padding");
				
				username.setStyle("color", getStyle("nameColor"));
				username.setStyle("fontSize", getStyle("nameFontSize"));
				
				time.setStyle("fontSize", getStyle("timeFontSize"));
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			override public function set data(obj:Object):void {
				super.data = obj;
				var m:ChatMessage = obj as ChatMessage;
				if (m) {
					time.text = m.time
					if (!isHTMLString(m.senderText)) {
						message.text = m.senderText;
					} else {
						message.textFlow = TextConverter.importToFlow(m.senderText, TextConverter.TEXT_FIELD_HTML_FORMAT);
					}
					var sameUser:Boolean = (m.lastSenderId == m.senderId);
					var sameTime:Boolean = (m.lastTime == m.time);
					if (sameUser && sameTime) {
						username.includeInLayout = time.includeInLayout = false;
						username.visible = time.visible = false;
						participantIcon.visible = false;
					} else {
						username.includeInLayout = time.includeInLayout = true;
						username.visible = time.visible = true;
						if (m.name == " ") {
							participantIcon.visible = false;
							username.visible = false;
							username.includeInLayout = false;
						} else {
							username.text = m.name;
							participantIcon.displayInitials = UserUtils.getInitials(m.name);
							participantIcon.visible = true;
							username.visible = true;
							username.includeInLayout = true;
						}
					}
				}
			}
			
			/**
			 * Checks if message string contains opening and closing HTML tag e.g. <....>
			 **/
			public function isHTMLString(str:String):Boolean {
				var pattern:RegExp = new RegExp("(\<+.*\>+)");
				var result:Object = pattern.exec(str);
				if (result == null) {
					return false;
				}
				return true;
			}
		]]>
	</fx:Script>

	<s:VGroup id="wrapperGroup"
			  width="100%">
		<s:HGroup id="titleGroup"
				  width="100%"
				  verticalAlign="middle">
			<views:ParticipantIcon id="participantIcon" />
			<s:Label id="username"
					 visible="true" />
			<s:Label id="time" />
		</s:HGroup>
		<s:RichEditableText id="message"
							paddingLeft="{participantIcon.width + getStyle('padding')}"
							editable="false"
							selectable="false"
							width="100%" />
	</s:VGroup>
</s:ItemRenderer>
