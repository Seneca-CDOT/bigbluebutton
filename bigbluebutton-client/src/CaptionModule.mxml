<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:Module xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:maps="org.bigbluebutton.modules.caption.maps.*"
		   xmlns:mate="http://mate.asfusion.com/"
		   implements="org.bigbluebutton.common.IBigBlueButtonModule"
		   creationComplete="onCreationComplete()">
	
	<fx:Declarations>
		<maps:CaptionEventMap id="captionEventMap"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import org.as3commons.logging.api.ILogger;
			import org.as3commons.logging.api.getClassLogger;
			import org.bigbluebutton.modules.caption.events.StartCaptionModuleEvent;
			import org.bigbluebutton.modules.caption.events.StopCaptionModuleEvent;
			
			private static const LOGGER:ILogger = getClassLogger(CaptionModule);
			
			private var _moduleName:String = "Caption Module";
			
			private function onCreationComplete():void {
				LOGGER.debug("CaptionModule Initialized");
			}
			
			public function get moduleName():String {
				return _moduleName;
			}
			
			public function start(attributes:Object):void {
				LOGGER.debug("Dispatching StartCaptionModuleEvent");
				var dispatcher:Dispatcher = new Dispatcher();
				
				var event:StartCaptionModuleEvent = new StartCaptionModuleEvent(StartCaptionModuleEvent.START_CAPTION_MODULE_EVENT);
				event.attributes = attributes;
				dispatcher.dispatchEvent(event);
			}
			
			public function stop():void {
				LOGGER.debug("Dispatching StopCaptionModuleEvent");
				var dispatcher:Dispatcher = new Dispatcher();
				
				var event:StopCaptionModuleEvent = new StopCaptionModuleEvent(StopCaptionModuleEvent.STOP_CAPTION_MODULE_EVENT);
				dispatcher.dispatchEvent(event);
			}
		]]>
	</fx:Script>
</mx:Module>