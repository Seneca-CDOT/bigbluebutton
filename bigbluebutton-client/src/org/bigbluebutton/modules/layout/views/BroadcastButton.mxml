<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<views:LayoutButton xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:fx="http://ns.adobe.com/mxml/2009"
		   creationComplete="init()" 
		   xmlns:mate="http://mate.asfusion.com/"
		   xmlns:views="org.bigbluebutton.modules.layout.views.*"
		   toolTip="{ResourceUtil.getInstance().getString('bbb.layout.broadcastButton.toolTip')}"
		   styleName="broadcastLayoutButtonStyle"
		   click="onClick(event)">
	
	<fx:Declarations>
		<mate:Listener type="{LocaleChangeEvent.LOCALE_CHANGED}" method="localeChanged" />	
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import flashx.textLayout.formats.Direction;
			
			import org.bigbluebutton.common.events.LocaleChangeEvent;
			import org.bigbluebutton.core.UsersUtil;
			import org.bigbluebutton.modules.layout.events.LayoutEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			private var _dispatcher:Dispatcher = new Dispatcher();
			
			private function init():void {
				refreshRole(UsersUtil.amIModerator());
				updateStyles();
			}
			
			private function onClick(e:Event):void {
				_dispatcher.dispatchEvent(new LayoutEvent(LayoutEvent.BROADCAST_LAYOUT_EVENT));
			}

			public function refreshRole(amIModerator:Boolean):void {
				this.visible = this.includeInLayout = this.enabled = amIModerator;
			}
			
			private function localeChanged(event:LocaleChangeEvent) : void {
				updateStyles();
			}
			
			private function updateStyles():void {
				var styleNameExt : String = "";
				if (ResourceUtil.getInstance().isRTLEnabled() && ResourceUtil.getInstance().getCurrentLanguageDirection() == Direction.RTL) {
					styleNameExt = "RTL";
				}
				
				this.styleName = "broadcastLayoutButtonStyle" + styleNameExt;
			}
		]]>
	</fx:Script>
</views:LayoutButton>
