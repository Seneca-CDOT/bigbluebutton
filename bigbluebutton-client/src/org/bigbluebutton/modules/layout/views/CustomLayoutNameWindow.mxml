<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2015 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:mate="http://mate.asfusion.com/"
		  xmlns:common="org.bigbluebutton.common.*"
		  implements="org.bigbluebutton.common.IKeyboardClose"
          verticalScrollPolicy="off"
          horizontalScrollPolicy="off"
          horizontalAlign="center"
		  layout="absolute"
		  showCloseButton="false"
          creationComplete="onCreationComplete()"
          minWidth="320">

	<fx:Declarations>
	  <mate:Listener type="{LayoutNameInUseEvent.LAYOUT_NAME_IN_USE_EVENT}" method="handleLayoutNameInUse"/>
	</fx:Declarations>

  <fx:Script>
    <![CDATA[
		import com.asfusion.mate.events.Dispatcher;
		
		import mx.managers.PopUpManager;
		
		import org.as3commons.logging.api.ILogger;
		import org.as3commons.logging.api.getClassLogger;
		import org.bigbluebutton.modules.layout.events.LayoutEvent;
		import org.bigbluebutton.modules.layout.events.LayoutNameInUseEvent;
		import org.bigbluebutton.util.i18n.ResourceUtil;
		
		private static const LOGGER:ILogger = getClassLogger(CustomLayoutNameWindow);      

      public var savingForFileDownload:Boolean = false;

      private function addButton_clickHandler():void {
        var e:LayoutEvent = new LayoutEvent(LayoutEvent.ADD_CURRENT_LAYOUT_EVENT);
        if (textInput.text != ResourceUtil.getInstance().getString('bbb.layout.combo.customName')) {
          e.layoutName = textInput.text;
        }
        var dispatcher:Dispatcher = new Dispatcher();
        dispatcher.dispatchEvent(e);
      }

      private function handleLayoutNameInUse(event:LayoutNameInUseEvent):void {
        if (!event.inUse) {
          PopUpManager.removePopUp(this);
          if (savingForFileDownload) {
            var dispatcher:Dispatcher = new Dispatcher();
            dispatcher.dispatchEvent(new LayoutEvent(LayoutEvent.SAVE_LAYOUTS_WINDOW_EVENT));
            savingForFileDownload = false;
          }
        } else {
          LOGGER.debug("The name is already in use, waiting for overwrite command or rename");
        }
      }

      private function onCreationComplete():void {
        textInput.setFocus();
      }

      private function onCancelClicked():void {
        PopUpManager.removePopUp(this);
      }
    ]]>
  </fx:Script>

  <mx:VBox width="100%"
		   height="100%"
		   paddingTop="5"
		   horizontalAlign="center">
	  <common:AdvancedLabel text="{ResourceUtil.getInstance().getString('bbb.layout.window.name')}"
							styleName="titleWindowStyle"
							width="180" />
	  <mx:Form width="100%">
		  <mx:FormItem label="{ResourceUtil.getInstance().getString('bbb.layout.combo.name')}" width="100%">
			  <mx:TextInput id="textInput" height="26" maxChars="140" width="100%"
							text="{ResourceUtil.getInstance().getString('bbb.layout.combo.customName')}"
							enter="addButton_clickHandler()" />
		  </mx:FormItem>
	  </mx:Form>
	  
	  <mx:HBox width="100%" horizontalAlign="right" horizontalGap="15">
	  	  <mx:Button id="addButton" click="addButton_clickHandler()" enabled="{textInput.text.length > 0}" styleName="mainActionButton"
				 	 label="{ResourceUtil.getInstance().getString('bbb.layout.addButton.label')}" toolTip="{ResourceUtil.getInstance().getString('bbb.layout.addButton.toolTip')}" />
		  <mx:Button label="{ResourceUtil.getInstance().getString('bbb.layout.cancelButton.label')}"
					 click="onCancelClicked()"/>
	  </mx:HBox>

  </mx:VBox>

  <mx:Button id="closeButton" click="onCancelClicked()" styleName="titleWindowCloseButton"
		     toolTip="{ResourceUtil.getInstance().getString('bbb.layout.window.close.tooltip')}"
			 top="15" right="10"
			 accessibilityName="{ResourceUtil.getInstance().getString('bbb.layout.window.accessibilityName')}" />

</mx:TitleWindow>
