<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<EventMap xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns="http://mate.asfusion.com/"
		  xmlns:mate="org.bigbluebutton.common.mate.*">
	<fx:Script>
		<![CDATA[
      import org.bigbluebutton.core.events.PerformRttTraceEvent;
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.modules.present.events.PresentationEvent;
      import org.bigbluebutton.modules.whiteboard.commands.GetWhiteboardAccessCommand;
      import org.bigbluebutton.modules.whiteboard.commands.GetWhiteboardShapesCommand;
      import org.bigbluebutton.modules.whiteboard.events.RequestNewCanvasEvent;
      import org.bigbluebutton.modules.whiteboard.events.StartWhiteboardModuleEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardAccessEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardCursorEvent;
      import org.bigbluebutton.modules.whiteboard.events.WhiteboardDrawEvent;
      import org.bigbluebutton.modules.whiteboard.managers.WhiteboardManager;
      import org.bigbluebutton.modules.whiteboard.services.MessageReceiver;
      import org.bigbluebutton.modules.whiteboard.services.MessageSender;
      import org.bigbluebutton.modules.whiteboard.services.WhiteboardService;
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<EventHandlers type="{WhiteboardAccessEvent.MODIFY_WHITEBOARD_ACCESS}" >
			<MethodInvoker generator="{WhiteboardService}" method="modifyAccess" arguments="{event}" />
		</EventHandlers>
		
		<EventHandlers type="{GetWhiteboardAccessCommand.GET_ACCESS}" >
			<MethodInvoker generator="{WhiteboardService}" method="getWhiteboardAccess"/>
		</EventHandlers>
    
    <EventHandlers type="{PerformRttTraceEvent.PERFORM_RTT_TRACE}" >
      <MethodInvoker generator="{WhiteboardService}" method="handlePerformRttTraceEvent"/>
    </EventHandlers>
    
    
			
		<EventHandlers type="{PresentationEvent.PRESENTATION_LOADED}" >
			<MethodInvoker generator="{WhiteboardService}" method="setActivePresentation" arguments="{event}" />
		</EventHandlers>
		
		<EventHandlers type="{StartWhiteboardModuleEvent.START_HIGHLIGHTER_MODULE_EVENT}">
			<MethodInvoker generator="{WhiteboardManager}" method="handleStartModuleEvent" />
		</EventHandlers>
		
		<EventHandlers type="{RequestNewCanvasEvent.REQUEST_NEW_CANVAS}">
			<MethodInvoker generator="{WhiteboardManager}" method="handleRequestNewCanvas" arguments="{event}"/>
		</EventHandlers>
		
	    <EventHandlers type="{GetWhiteboardShapesCommand.GET_SHAPES}">
	        <MethodInvoker generator="{WhiteboardService}" method="getAnnotationHistory" arguments="{event}"/>
	    </EventHandlers>
	    
		<EventHandlers type="{WhiteboardDrawEvent.CLEAR}" >
			<MethodInvoker generator="{WhiteboardService}" method="clearBoard" arguments="{event}" />
		</EventHandlers>
		
		<EventHandlers type="{WhiteboardDrawEvent.SEND_SHAPE}">
			<MethodInvoker generator="{WhiteboardService}" method="sendShape" arguments="{event}" />
		</EventHandlers>
		
		<EventHandlers type="{WhiteboardDrawEvent.UNDO}" >
			<MethodInvoker generator="{WhiteboardService}" method="undoGraphic" arguments="{event}" />
		</EventHandlers>
		
		<EventHandlers type="{WhiteboardCursorEvent.SEND_CURSOR_POSITION}" >
			<MethodInvoker generator="{WhiteboardService}" method="sendCursorPosition" arguments="{event}" />
		</EventHandlers>

	  <EventHandlers type="{BBBEvent.RECONNECT_BIGBLUEBUTTON_SUCCEEDED_EVENT}" >
	    <MethodInvoker generator="{WhiteboardManager}" method="removeAnnotationsHistory" />
	  </EventHandlers>
	  
	    <Injectors target="{WhiteboardManager}">
	    </Injectors>	
			
		<Injectors target="{WhiteboardService}">
			<PropertyInjector targetKey="receiver" source="{MessageReceiver}"/>
			<PropertyInjector targetKey="sender" source="{MessageSender}"/>
		</Injectors>
		
		<Injectors target="{MessageReceiver}">
		</Injectors>
	</fx:Declarations>
</EventMap>
