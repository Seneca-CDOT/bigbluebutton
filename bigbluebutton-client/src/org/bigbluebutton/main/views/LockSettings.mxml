<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:mate="http://mate.asfusion.com/" 
				implements="org.bigbluebutton.common.IKeyboardClose"
				show="this.setFocus()"
				xmlns:common="org.bigbluebutton.common.*"
				minWidth="400" showCloseButton="false" 
				keyDown="handleKeyDown(event)">
	
	<fx:Script>
		<![CDATA[
			import org.bigbluebutton.core.PopUpUtil;
			import org.bigbluebutton.core.events.LockControlEvent;
			import org.bigbluebutton.core.events.SetWebcamsOnlyForModeratorEvent;
			import org.bigbluebutton.core.model.LiveMeeting;
			import org.bigbluebutton.core.vo.LockSettingsVO;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			[Bindable] public var disableCam:Boolean = false;
			[Bindable] public var webcamsOnlyForModerator:Boolean = false;
			[Bindable] public var disableMic:Boolean = false;
			[Bindable] public var disablePubChat:Boolean = false;
			[Bindable] public var disablePrivChat:Boolean = false;
			[Bindable] public var lockedLayout:Boolean = false;
			[Bindable] public var lockOnJoin:Boolean = false;
			[Bindable] public var lockOnJoinConfigurable:Boolean = false;
			  
			private function handleKeyDown(event:KeyboardEvent):void {
				if (event.charCode == Keyboard.ESCAPE) {
					onCancelClicked();
				}
			}

			private function onSaveClicked():void {
				var event:LockControlEvent = new LockControlEvent(LockControlEvent.SAVE_LOCK_SETTINGS);
				var lockSettings:LockSettingsVO = new LockSettingsVO(chkDisableWebcam.selected, chkDisableMicrophone.selected, chkDisablePrivateChat.selected, chkDisablePublicChat.selected, chkDisableLayout.selected, chkLockOnJoin.selected, lockOnJoinConfigurable);
				event.payload = lockSettings.toMap();
				dispatchEvent(event);

				if (LiveMeeting.inst().meeting.webcamsOnlyForModerator != chkwebcamsOnlyForModerator.selected) {
					var wEvent:SetWebcamsOnlyForModeratorEvent = new SetWebcamsOnlyForModeratorEvent(SetWebcamsOnlyForModeratorEvent.UPDATE_WEBCAMS_ONLY_FOR_MODERATOR);
					wEvent.webcamsOnlyForModerator = chkwebcamsOnlyForModerator.selected;
					dispatchEvent(wEvent);
				}

				PopUpUtil.removePopUp(this);
			}	
			
			private function onCancelClicked():void {
				PopUpUtil.removePopUp(this);
			}
			
			protected function chkDisableWebcam_changeHandler(event:Event):void
			{
				if (chkDisableWebcam.selected) {
					chkwebcamsOnlyForModerator.selected = false;
				}
			}
			
			protected function chkwebcamsOnlyForModerator_changeHandler(event:Event):void
			{
				if (chkwebcamsOnlyForModerator.selected) {
					chkDisableWebcam.selected = false;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<common:TabIndexer startIndex="1" tabIndices="{[titleText, saveBtn, cancelBtn]}"/>
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" horizontalAlign="center">
		<common:AdvancedLabel text="{ResourceUtil.getInstance().getString('bbb.lockSettings.title')}"
							  styleName="titleWindowStyle"
							  id="titleText"
							  minWidth="300" />
		
		<mx:Box width="100%" styleName="lockSettingsHintBoxStyle">
			<mx:Text width="100%" id="fileFormatHintLbl" textAlign="center" text="{ResourceUtil.getInstance().getString('bbb.lockSettings.hint')}" styleName="lockSettingHintTextStyle"/>
		</mx:Box>

		<mx:HBox verticalAlign="top" width="100%" paddingTop="20">
			<mx:Label width="70%" styleName="lockSettingsColumnTitleStyle" text="{ResourceUtil.getInstance().getString('bbb.lockSettings.feature')}"/>
			<mx:Label width="30%" styleName="lockSettingsColumnTitleStyle" text="{ResourceUtil.getInstance().getString('bbb.lockSettings.locked')}" textAlign="center"/>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle" 
                text="{ResourceUtil.getInstance().getString('bbb.lockSettings.webcam')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkDisableWebcam" selected="{disableCam}" change="chkDisableWebcam_changeHandler(event)"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle" 
                text="{ResourceUtil.getInstance().getString('bbb.lockSettings.webcamsOnlyForModerator')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkwebcamsOnlyForModerator" selected="{webcamsOnlyForModerator}" change="chkwebcamsOnlyForModerator_changeHandler(event)"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle" 
                text="{ResourceUtil.getInstance().getString('bbb.lockSettings.microphone')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkDisableMicrophone" selected="{disableMic}"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle" 
                text="{ResourceUtil.getInstance().getString('bbb.lockSettings.publicChat')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkDisablePublicChat" selected="{disablePubChat}"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle" 
                text="{ResourceUtil.getInstance().getString('bbb.lockSettings.privateChat')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkDisablePrivateChat" selected="{disablePrivChat}"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HBox verticalAlign="top" width="100%">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle"
					  text="{ResourceUtil.getInstance().getString('bbb.lockSettings.layout')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkDisableLayout" selected="{lockedLayout}"/>
			</mx:HBox>
		</mx:HBox>

		<mx:HRule width="100%" visible="{lockOnJoinConfigurable}" includeInLayout="{lockOnJoinConfigurable}"/>

		<mx:HBox verticalAlign="top" width="100%" visible="{lockOnJoinConfigurable}" includeInLayout="{lockOnJoinConfigurable}">
			<mx:Label width="70%" styleName="lockSettingsDefaultLabelStyle"
					  text="{ResourceUtil.getInstance().getString('bbb.lockSettings.lockOnJoin')}" />
			<mx:HBox width="30%" styleName="lockSettingsCheckboxColumn">
				<mx:CheckBox id="chkLockOnJoin" selected="{lockOnJoin}" />
			</mx:HBox>
		</mx:HBox>

		<mx:HBox width="100%" horizontalAlign="right" horizontalGap="18" paddingTop="20">
			<mx:Button id="saveBtn" label="{ResourceUtil.getInstance().getString('bbb.lockSettings.save')}"
					   styleName="mainActionButton"
					   click="onSaveClicked()"
					   toolTip="{ResourceUtil.getInstance().getString('bbb.lockSettings.save.tooltip')}"/>

			<mx:Button id="cancelBtn" label="{ResourceUtil.getInstance().getString('bbb.lockSettings.cancel')}" 
					   click="onCancelClicked()"
					   toolTip="{ResourceUtil.getInstance().getString('bbb.lockSettings.cancel.toolTip')}"/>
		</mx:HBox>
	</mx:VBox>		
</mx:TitleWindow>
