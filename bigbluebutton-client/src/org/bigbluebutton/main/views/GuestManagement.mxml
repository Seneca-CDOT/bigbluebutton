<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mate="http://mate.asfusion.com/"
		horizontalGap="30"
		width="400">

	<fx:Declarations>
		<mate:Listener type="{BBBEvent.RETRIEVE_GUEST_POLICY}" method="refreshGuestPolicy"/>
		<mate:Listener type="{BBBEvent.SETTINGS_CONFIRMED}" method="onOkClicked"/>
		<mate:Listener type="{BBBEvent.SETTINGS_CANCELLED}" method="onCancelClicked"/>
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import mx.events.ItemClickEvent;
			
			import org.as3commons.logging.api.ILogger;
			import org.as3commons.logging.api.getClassLogger;
			import org.bigbluebutton.common.events.SettingsComponentEvent;
			import org.bigbluebutton.main.events.BBBEvent;
			import org.bigbluebutton.util.i18n.ResourceUtil;

			private static const LOGGER:ILogger = getClassLogger(GuestManagement);

			private var option:Number = 0;
			private var guestPolicy:String;

			private function refreshGuestPolicy(event:BBBEvent):void {
				setGuestPolicy(event.payload.guestPolicy);
			}

			public function setGuestPolicy(guestPolicy:String):void {
				this.guestPolicy = guestPolicy;

				if(guestPolicy == "ASK_MODERATOR") {
					guestManagement.selectedValue = 0;
					option = 0;
				} else if(guestPolicy == "ALWAYS_ACCEPT") {
					guestManagement.selectedValue = 1;
					option = 1;
				} else {
					guestManagement.selectedValue = 2;
					option = 2;
				}
			}

			public function addToSettings():void {
				var addGuestManagement:SettingsComponentEvent = new SettingsComponentEvent(SettingsComponentEvent.ADD);
				addGuestManagement.component = this;
				var dispatcher:Dispatcher = new Dispatcher();
				dispatcher.dispatchEvent(addGuestManagement);
			}

			private function onCancelClicked(e:Event = null):void {
				setGuestPolicy(guestPolicy);
			}

			private function handleGuestClick(event:ItemClickEvent):void {
				option = event.currentTarget.selectedValue;
			}

			private function onOkClicked(e:Event = null):void {
				var event:BBBEvent = new BBBEvent(BBBEvent.BROADCAST_GUEST_POLICY);
				if(option == 0) {
					event.payload['guestPolicy'] = "ASK_MODERATOR";
					dispatchEvent(event);
				}
				else if(option == 1) {
					event.payload['guestPolicy'] = "ALWAYS_ACCEPT";
					dispatchEvent(event);
					dispatchEvent(new BBBEvent(BBBEvent.ACCEPT_ALL_WAITING_GUESTS));
				}
				else {
					event.payload['guestPolicy'] = "ALWAYS_DENY";
					dispatchEvent(event);
					dispatchEvent(new BBBEvent(BBBEvent.DENY_ALL_WAITING_GUESTS));
				}
				LOGGER.debug("SENDING TO SERVER POLICY");
			}
		]]>
	</fx:Script>
	<mx:VBox width="30%" horizontalAlign="right">
		<mx:Label text="{ResourceUtil.getInstance().getString('bbb.guests.Management')}"/>
	</mx:VBox>
	<mx:VBox width="70%">
		<mx:RadioButtonGroup id="guestManagement" itemClick="handleGuestClick(event);"/>
		<mx:RadioButton groupName="guestManagement"
				id="askModerator"
				label="{ResourceUtil.getInstance().getString('bbb.guests.askModerator')}"
				value="0"
				/>
		<mx:RadioButton groupName="guestManagement"
				id="alwaysAccept"
				label="{ResourceUtil.getInstance().getString('bbb.guests.alwaysAccept')}"
				value="1"
				/>
		<mx:RadioButton groupName="guestManagement"
				id="AlwaysDeny"
				label="{ResourceUtil.getInstance().getString('bbb.guests.alwaysDeny')}"
				value="2"
				/>
	</mx:VBox>
</mx:HBox>
