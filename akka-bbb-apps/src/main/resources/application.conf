akka {
  actor {
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  
  rediscala-publish-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
    
  rediscala-subscriber-worker-dispatcher {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 512
    }
}

redis {
    host="127.0.0.1"
    port=6379
    password=""
    # recording keys should expire in 14 days
    keyExpiry=1209600
}

http {
  interface = "0.0.0.0"
  port = 9000
}

inactivity {
    # time in seconds
    deadline=7200
    # inactivity warning message
    timeLeft=300
}

expire {
  # time in seconds
  lastUserLeft = 60
  neverJoined = 300
}

services {
  bbbWebAPI = "http://192.168.23.33/bigbluebutton/api"
  sharedSecret = "changeme"
}

red5 {
    deskshareip="10.130.218.89"
    deskshareapp="video-broadcast"
}

eventBus {
  meetingManagerChannel = "MeetingManagerChannel"
  outMessageChannel = "OutgoingMessageChannel"
  incomingJsonMsgChannel = "IncomingJsonMsgChannel"
  outBbbMsgMsgChannel = "OutBbbMsgChannel"
}

sharedNotes {
  maxNumberOfNotes = 3
  maxNumberOfUndos = 30
}

whiteboard {
  multiUserDefault = false
}